<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Setting values -->

	<bean id="springRespository"
		class="com.bence.mate.spring.xml.repository.SpringRespository">
		<constructor-arg index="0" value="12" />
	</bean>

	<!-- Setter injection -->

	<bean id="elastic" class="com.bence.mate.spring.xml.Elastic">
		<property name="abstractRepository" ref="springRespository" />
	</bean>

	<!-- Construction injection -->

	<bean id="mySQL" class="com.bence.mate.spring.xml.MySQL">
		<constructor-arg ref="springRespository" />
	</bean>

	<!-- Static Factory -->

	<bean id="staticDatabaseFactory"
		class="com.bence.mate.spring.xml.factory.StaticDatabaseFactory"
		factory-method="getRepository">
		<constructor-arg value="1" />
	</bean>

	<bean id="mongo" class="com.bence.mate.spring.xml.Mongo">
		<property name="abstractRepository"
			ref="staticDatabaseFactory" />
	</bean>
	
	<!-- Factory -->
	
	<bean id="databaseFactory"
		class="com.bence.mate.spring.xml.factory.DatabaseFactory">
	</bean>

	<bean id="databaseServiceFactory"
		class="com.bence.mate.spring.xml.factory.DatabaseFactory"
		factory-method="getRepository" factory-bean="databaseFactory">
		<constructor-arg value="1" />
	</bean>

	<bean id="redis" class="com.bence.mate.spring.xml.Redis">
		<constructor-arg ref="databaseServiceFactory" />
	</bean>
</beans>